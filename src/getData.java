
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.sql.Timestamp;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import org.jsoup.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Wasitpon
 */
public class getData extends javax.swing.JFrame {

    private final JFileChooser fileChooser;
    private File fileHTML; 
    private static BufferedWriter writer=null;
    private static BufferedReader reader=null;  
    private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd-HHmmss");
    private static int numberOfData = 0;
    private static String rawData = "",output = "",grade = "", regis = " ";
    private static String stripped,line,tmp;
    private static String arrSplit[],rawSplit[];
            
    public getData() {
        initComponents();
        fileChooser = new JFileChooser();
        File home = FileSystemView.getFileSystemView().getHomeDirectory();
        fileChooser.setCurrentDirectory(home);
        fileChooser.setFileFilter(new FileNameExtensionFilter("HTML FILE", "html"));
        fileHTML = null;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        cr60But = new javax.swing.JButton();
        cr60Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        cr54But = new javax.swing.JButton();
        cr54Label = new javax.swing.JLabel();
        getDataBut = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cr60But.setText("CR 60 ...");
        cr60But.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr60ButMouseClicked(evt);
            }
        });

        cr60Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cr60Label.setText("Grade Form"); // NOI18N

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        cr54But.setText("CR 54 ...");
        cr54But.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr54ButMouseClicked(evt);
            }
        });

        cr54Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cr54Label.setText("Registration Form"); // NOI18N

        getDataBut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getDataBut.setText("Get Data !");
        getDataBut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getDataButMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(cr54But)
                                .addGap(18, 18, 18)
                                .addComponent(cr54Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(cr60But)
                                .addGap(18, 18, 18)
                                .addComponent(cr60Label, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addComponent(getDataBut, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cr60But, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cr60Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cr54But, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cr54Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(getDataBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("REG_CHULA", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 644, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 359, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("POL_TAB", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cr60ButMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr60ButMouseClicked
        int returnValue = fileChooser.showOpenDialog(this);
        
        if(returnValue == JFileChooser.APPROVE_OPTION){
            try{
                fileHTML = fileChooser.getSelectedFile();
                String directory = fileHTML.getAbsolutePath().split(fileHTML.getName())[0] + fileHTML.getName().split(".html")[0]+"_files";
                directory += "\\com.dtm.chula.general.servlet.html";
                
                grade = ExtractGradeFromHTML(new File(directory));
                
                if(grade.length() == 0 || grade.isEmpty() || grade.charAt(0) == '!')    
                {
                    cr60Label.setText("FILE MISMATCH! Please Select HTML file from REGCU");
                    cr60Label.setForeground(Color.RED);
                    textArea.setText("MISMATCH!");
                }
                else
                {
                    cr60Label.setForeground(Color.BLACK);
                    cr60Label.setText("SUCCESSFULLY!");          
                }
                
            }
            catch(Exception e)  {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_cr60ButMouseClicked

    private void cr54ButMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr54ButMouseClicked
        int returnValue = fileChooser.showOpenDialog(this);
        
        if(returnValue == JFileChooser.APPROVE_OPTION){
            try{
                fileHTML = fileChooser.getSelectedFile();
                String directory = fileHTML.getAbsolutePath().split(fileHTML.getName())[0] + fileHTML.getName().split(".html")[0]+"_files";
                directory += "\\logonSuccessPage.html";
                regis = ExtractRegistrationFromHTML(new File(directory));
                
                
                if(regis.length() == 0 || regis.isEmpty() || regis.charAt(0) == '!')   
                {
                    cr54Label.setText("FILE MISMATCH! Please Select HTML file from REGCU");
                    cr54Label.setForeground(Color.RED);
                    
                    textArea.setText("MISMATCH!");
                }
                else
                {
                    cr54Label.setForeground(Color.BLACK);
                    cr54Label.setText("SUCCESSFULLY!");               
                    //textArea.setText(res);
                    
                }
                
            }
            catch(Exception e)  {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_cr54ButMouseClicked

    private void getDataButMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getDataButMouseClicked
        if(Pattern.matches("(SUC)(.*)", cr54Label.getText()) || Pattern.matches("(SUC)(.*)", cr60Label.getText()) )   {
            output = grade + regis;
            textArea.setText(output);
            Timestamp timestamp = new Timestamp(System.currentTimeMillis());
            try {
                writer = new BufferedWriter(new FileWriter("output//" + "output-" + sdf.format(timestamp) + ".txt"));
                writer.write(output);
                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(getData.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            textArea.setText("CR60 or CR54 not successfully");
        }
    }//GEN-LAST:event_getDataButMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(getData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(getData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(getData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(getData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new getData().setVisible(true);
            }
        });
    }
    private static String ExtractRegistrationFromHTML(File file)
    {
        try {
            reader = new BufferedReader(new InputStreamReader(
                          new FileInputStream(file), "UTF-8"));
            

            while ((line = reader.readLine()) != null) {    rawData += line;    }
            reader.close();
        } 
        catch (UnsupportedEncodingException ex) {
            return "!" + ex.getMessage();
        } 
        catch (FileNotFoundException ex) {
            return "!" + ex.getMessage();
        } 
        catch (IOException ex) {
            return "!" + ex.getMessage();
        }
         
        rawSplit = rawData.split("<tbody>");
        for (int newline = 0; newline < rawSplit.length; newline++) {
            stripped = Jsoup.parse(rawSplit[newline]).text();
            arrSplit = stripped.split(" ");
            numberOfData = 0;
            //System.out.print(arrSplit.length + " : ");
            //for(String arr: arrSplit)   {   System.out.print(arr + " ");    }
            //System.out.println();
            
            
            if(Pattern.matches("(ลำดับที่|�ӴѺ���)(.*)", arrSplit[0]))
            {
                tmp = "";
                for(int count=0; count<arrSplit.length; count++)
                {
                    if(isStringNumeric(arrSplit[count]))
                    {   
                        count++;
                        tmp += arrSplit[count++] + " ";
                        while(!isStringNumeric( arrSplit[++count] ) )   { } 
                        count++;
                        tmp += arrSplit[count] + " " + "A ";
                    }
                }
                output += String.valueOf( tmp.split(" ").length/3 ) + System.lineSeparator() + tmp + System.lineSeparator();
                newline = rawSplit.length+1;
                System.out.println(output);
            }
            else if(arrSplit[0].equals("CR54"))
            {   
                if(arrSplit[1].equals("�Ҥ����֡�ҵ�") || arrSplit[1].equals("ภาคการศึกษาต้น"))            {   output += "1 ";     }
                else if(arrSplit[1].equals("�Ҥ����֡�һ���") || arrSplit[1].equals("ภาคการศึกษาปลาย"))   {   output += "2 ";     }
                else if(arrSplit[1].equals("�ҤĴ���͹") || arrSplit[1].equals("ภาคฤดูร้อน"))             {   output += "3 ";     }
                output += String.valueOf( Integer.parseInt(arrSplit[3])-543 ) + " ";     
            }
            
        }
        return output;
    }
    private static String ExtractGradeFromHTML(File file)
    {
        try //throws UnsupportedEncodingException,IOException
        {
            reader = new BufferedReader(new InputStreamReader(
                    new FileInputStream(file), "UTF-8"));
            
            while ((line = reader.readLine()) != null) {    rawData += line;    }
            reader.close();
            
            rawSplit = rawData.split("<tbody>");
            for (int newline = 0; newline < rawSplit.length; newline++) {
                stripped = Jsoup.parse(rawSplit[newline]).text();
                arrSplit = stripped.split(" ");
                numberOfData = 0;
                
                if(Pattern.matches("(�Ҥ|ภาค)(.*)", arrSplit[0]))    {
                    
                    if(arrSplit[0].equals("�Ҥ����֡�ҵ�") || arrSplit[0].equals("ภาคการศึกษาต้น"))            {   output += "1 ";     }
                    else if(arrSplit[0].equals("�Ҥ����֡�һ���") || arrSplit[0].equals("ภาคการศึกษาปลาย"))   {   output += "2 ";     }
                    else if(arrSplit[0].equals("�ҤĴ���͹") || arrSplit[0].equals("ภาคฤดูร้อน"))             {   output += "3 ";     }
                    
                    output += String.valueOf( Integer.parseInt(arrSplit[2])-543 ) + " ";
                    
                    newline++;
                    stripped = Jsoup.parse(rawSplit[newline]).text();
                    arrSplit = stripped.split(" ");
                    tmp = "";
                    
                    for(int count=0; count<arrSplit.length; count++)  {
                        if(isStringNumeric(arrSplit[count]))
                        {
                            numberOfData++;
                            if(numberOfData % 2 == 0 ){
                                tmp += arrSplit[count] + " ";
                                count++;
                                tmp += arrSplit[count] + " ";
                            }
                            else    {
                                tmp += arrSplit[count] + " ";
                            }
                        }

                    }
                    tmp = tmp.substring(0,tmp.length()-1);
                    output += String.valueOf(numberOfData/2) + System.lineSeparator() + tmp + System.lineSeparator();
                    
                    
                }
            }
            
            return output;
        } catch (UnsupportedEncodingException ex) {
            return "!" + ex.getMessage();
        } catch (FileNotFoundException ex) {
            return "!" + ex.getMessage();
        } catch (IOException ex) {
            return "!" + ex.getMessage();
        }
    }
    
    public static boolean isStringNumeric( String str )
    {
        if(str.isEmpty())   return false;
        DecimalFormatSymbols currentLocaleSymbols = DecimalFormatSymbols.getInstance();
        char localeMinusSign = currentLocaleSymbols.getMinusSign();

        if ( !Character.isDigit( str.charAt( 0 ) ) && str.charAt( 0 ) != localeMinusSign ) return false;

        boolean isDecimalSeparatorFound = false;
        char localeDecimalSeparator = currentLocaleSymbols.getDecimalSeparator();

        for ( char c : str.substring( 1 ).toCharArray() )
        {
            if ( !Character.isDigit( c ) )
            {
                if ( c == localeDecimalSeparator && !isDecimalSeparatorFound )
                {
                    isDecimalSeparatorFound = true;
                    continue;
                }
                return false;
            }
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cr54But;
    private javax.swing.JLabel cr54Label;
    private javax.swing.JButton cr60But;
    private javax.swing.JLabel cr60Label;
    private javax.swing.JButton getDataBut;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
